specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  - name: PortfolioManager
    kind: ethereum/contract
    network: mainnet
    source:
      abi: PortfolioManager
      address: '0x06a5bf70bff314177488864fe03576ff608e6aec'
      startBlock: 8533644
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings.ts
      abis:
        - name: PortfolioManager
          file: ./abis/PortfolioManager.json
        - name: ERC20
          file: ./abis/ERC20.json
      entities:
        - User
        - RAYToken
        - DepositEvent
        - WithdrawEvent
        - MintEvent
        - BurnEvent
        - Opportunity
        - Portfolio
        - Asset
        - OpportunityToken
      eventHandlers:
        - event: LogMintOpportunityToken(bytes32,indexed bytes32)
          handler: handleMintOpportunityToken
        - event: LogMintRAYT(indexed bytes32,indexed bytes32,indexed address,uint256)
          handler: handleMintRAYToken
        - event: LogDepositToRAYT(indexed bytes32,uint256,uint256)
          handler: handleDepositToRAYToken
        - event: LogWithdrawFromRAYT(indexed bytes32,uint256,uint256)
          handler: handleWithdrawFromRAYToken
        - event: LogBurnRAYT(indexed bytes32,indexed address,uint256,uint256)
          handler: handleBurnRAYToken
  - name: OpportunityManager
    kind: ethereum/contract
    network: mainnet
    source:
      abi: OpportunityManager
      address: '0xa1fc31d0439522bb70c39cc01329e57cdf97fd90'
      startBlock: 8533657
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.4
      language: wasm/assemblyscript
      file: ./src/mappings.ts
      abis:
        - name: OpportunityManager
          file: ./abis/OpportunityManager.json
        - name: ERC20
          file: ./abis/ERC20.json
      entities:
        - Opportunity
        - Portfolio
        - Asset
        - OpportunityToken
      callHandlers:
        - function: buyPosition(bytes32,address,address,address,uint256,bool)
          handler: handleBuyPosition
        - function: increasePosition(bytes32,bytes32,address,address,uint256,bool)
          handler: handleIncreasePosition
        - function: withdrawPosition(bytes32,bytes32,address,address,uint256,bool)
          handler: handleWithdrawPosition
